name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  actions: read
  packages: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build-all
        
      - name: Package Electron app (Linux)
        if: matrix.platform == 'linux'
        run: npm run package-all
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Package Electron app (Windows)
        if: matrix.platform == 'windows'
        run: npm run package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Package Electron app (macOS)
        if: matrix.platform == 'macos'
        run: npm run package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          
      - name: Upload release assets (Linux)
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            release/*.AppImage
            release/*.deb
            
      - name: Upload release assets (Windows)
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: release/*.exe
          
      - name: Upload release assets (macOS)
        if: matrix.platform == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: release/*.dmg
          
  create-release:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts
          
      - name: Display structure of downloaded files
        run: ls -la release-artifacts/
        
      - name: Flatten artifacts directory
        run: |
          mkdir -p flattened-artifacts
          find release-artifacts -type f \( -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.deb" \) -exec cp {} flattened-artifacts/ \;
          ls -la flattened-artifacts/
        
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: flattened-artifacts/*
          generate_release_notes: true
          name: "KNX Viewer ${{ github.ref_name }}"
          body: |
            ## ðŸŽ‰ KNX Viewer ${{ github.ref_name }}
            
            A powerful Electron-based application for monitoring and analyzing KNX/EIB bus communication in real-time and from recorded files.
            
            ### ðŸš€ Key Features
            - **Real-time Monitoring**: Connect to KNX interfaces via KNXnet/IP
            - **Live Busmonitor Mode**: Passive monitoring of all bus traffic
            - **Comprehensive Analysis**: Full CommonEmi protocol parsing
            - **File Support**: Import XML telegram files from ETS
            - **Advanced Search**: Filter by address, payload, timestamp
            - **Cross-Platform**: Windows, macOS, and Linux support
            
            ### ðŸ“¦ Installation
            
            #### Windows
            Download and run `knxview-setup-${{ github.ref_name }}.exe`
            
            #### macOS
            Download `knxview-${{ github.ref_name }}.dmg`, open and drag to Applications
            
            #### Linux
            - **AppImage**: Download `knxview-${{ github.ref_name }}.AppImage`, make executable and run
            - **Debian**: Download and install `knxview_${{ github.ref_name }}_amd64.deb`
            
            ### ðŸ’» System Requirements
            - **OS**: Windows 10+, macOS 10.14+, or Linux (Ubuntu 18.04+)
            - **RAM**: 4GB minimum, 8GB recommended
            - **Network**: Ethernet connection for KNX interface access
            - **Storage**: 100MB free space
            
            ### ðŸ“š Documentation
            - [User Manual](https://github.com/${{ github.repository }}/blob/main/docs/USER_MANUAL.md)
            - [Development Guide](https://github.com/${{ github.repository }}/blob/main/docs/DEVELOPMENT.md)
            - [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.0...${{ github.ref_name }}